
<% if @s3_direct_post.present? %>
  <%= form_for [refinery, :admin, ::Refinery::Image.new], authenticity_token: false, :html => {multiple: true, class: 'dropzone', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host }} do |f| %>
    <div class="fallback">
      <%= f.file_field :image %>
      <%= f.submit 'Upload Image' %>
    </div>
  <% end %>

  <%= form_tag refinery.process_image_admin_images_path, class: 'process', remote: true do %>
    <%= hidden_field_tag :image_width %>
    <%= hidden_field_tag :image_height %>
    <%= hidden_field_tag :image_size %>
    <%= hidden_field_tag :image_name %>
    <%= hidden_field_tag :image_uid %>
    <%= hidden_field_tag :image_mime_type %>
  <% end %>

  <%= render '/refinery/admin/images/dropzone', reload_after_upload: local_assigns[:reload_after_upload].present? ? reload_after_upload : false %>
<% else %>
  <%= form_for @image, :url => (@url_override or @image.persisted? ? refinery.admin_image_path(@image) : refinery.admin_images_path),
               :html => { :multipart => true } do |f| %>

    <%= render '/refinery/admin/error_messages',
               :object => @image,
               :include_object_name => false %>

    <div class="field">
      <% if action_name =~ /(edit)|(update)/ %>
        <p>
          <%= t('.use_current_image') %>
          <em><%= t('.or') %></em><%= t('.replace_image') %>
        </p>
        <p>
          <%= f.file_field :image %>
        </p>
      <% else %>
        <% # we must only hint at multiple when it's a new record otherwise update fails. %>
        <%= f.file_field :image, :multiple => true %>
      <% end %>
    </div>

    <% if f.object.respond_to?(:image_alt) %>
      <div class="field">
        <%= f.label :image_alt %>
        <%= f.text_field :image_alt  %>
      </div>
    <% end %>

    <div class="field">
      <label><%= t('.maximum_image_size', :bytes => number_to_human_size(Refinery::Images.max_image_size)) %></label>
    </div>

    <input type="hidden" name="wymeditor" value="<%= params[:wymeditor] %>">

    <%= render '/refinery/admin/form_actions', :f => f,
               :continue_editing => false,
               :hide_cancel => (@app_dialog or action_name == 'insert' or from_dialog?),
               :delete_title => t('delete', :scope => 'refinery.admin.images'),
               :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @image.image_name) -%>

    <% if @app_dialog %>
      <input type="hidden" name="app_dialog" value="<%= @app_dialog %>" />
      <input type="hidden" name="field" value="<%= @field %>" />
      <input type="hidden" name="update_image" value="<%= @update_image %>" />
      <input type="hidden" name="thumbnail" value="<%= @thumbnail %>" />
      <input type="hidden" name="callback" value="<%= @callback %>" />
      <input type="hidden" name="conditions" value="<%= @conditions %>" />
    <% end %>
  <% end %>

  <% if action_name =~ /(edit)|(update)/ %>
    <div id="existing_image">
      <label><%=t('.current_image') %></label>
      <%= image_fu @image, '225x255>', :class => "brown_border" %>
    </div>
  <% end %>

<% end %>
